// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import ObjectiveC;
@import CoreGraphics;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIWindow;
@class UIApplication;

SWIFT_CLASS("_TtC10swift_204811AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSTimer;

/**
  A class representing the game state and game logic for swift-2048. It is owned by a NumberTileGame view controller.
*/
SWIFT_CLASS("_TtC10swift_20489GameModel")
@interface GameModel : NSObject
@property (nonatomic, readonly) NSInteger dimension;
@property (nonatomic, readonly) NSInteger threshold;
@property (nonatomic) NSInteger score;
@property (nonatomic, strong) NSTimer * _Nonnull timer;
@property (nonatomic, readonly) NSInteger maxCommands;
@property (nonatomic, readonly) double queueDelay;
/**
  Reset the game state.
*/
- (void)reset;
/**
  Inform the game model that the move delay timer fired. Once the timer fires, the game model tries to execute a
  single move that changes the game state.
*/
- (void)timerFired:(NSTimer * _Nonnull)_;
/**
  Insert a tile with a given value at a random open position upon the gameboard.
*/
- (void)insertTileAtRandomLocationWithValue:(NSInteger)value;
- (BOOL)userHasLost;
+ (BOOL)quiescentTileStillQuiescentWithInputPosition:(NSInteger)inputPosition outputLength:(NSInteger)outputLength originalPosition:(NSInteger)originalPosition;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class TileView;
@class UIColor;
@class NSCoder;

SWIFT_CLASS("_TtC10swift_204813GameboardView")
@interface GameboardView : UIView
@property (nonatomic) NSInteger dimension;
@property (nonatomic) CGFloat tileWidth;
@property (nonatomic) CGFloat tilePadding;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic, copy) NSDictionary<NSIndexPath *, TileView *> * _Nonnull tiles;
@property (nonatomic, readonly) CGFloat tilePopStartScale;
@property (nonatomic, readonly) CGFloat tilePopMaxScale;
@property (nonatomic, readonly) NSTimeInterval tilePopDelay;
@property (nonatomic, readonly) NSTimeInterval tileExpandTime;
@property (nonatomic, readonly) NSTimeInterval tileContractTime;
@property (nonatomic, readonly) CGFloat tileMergeStartScale;
@property (nonatomic, readonly) NSTimeInterval tileMergeExpandTime;
@property (nonatomic, readonly) NSTimeInterval tileMergeContractTime;
@property (nonatomic, readonly) NSTimeInterval perSquareSlideDuration;
- (nonnull instancetype)initWithDimension:(NSInteger)d tileWidth:(CGFloat)width tilePadding:(CGFloat)padding cornerRadius:(CGFloat)radius backgroundColor:(UIColor * _Nonnull)backgroundColor foregroundColor:(UIColor * _Nonnull)foregroundColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/**
  Reset the gameboard.
*/
- (void)reset;
- (void)setupBackgroundWithBackgroundColor:(UIColor * _Nonnull)bgColor tileColor:(UIColor * _Nonnull)tileColor;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIGestureRecognizer;
@class NSBundle;

/**
  A view controller representing the swift-2048 game. It serves mostly to tie a GameModel and a GameboardView
  together. Data flow works as follows: user input reaches the view controller and is forwarded to the model. Move
  orders calculated by the model are returned to the view controller and forwarded to the gameboard view, which
  performs any animations to update its state.
*/
SWIFT_CLASS("_TtC10swift_204828NumberTileGameViewController")
@interface NumberTileGameViewController : UIViewController
@property (nonatomic) NSInteger dimension;
@property (nonatomic) NSInteger threshold;
@property (nonatomic, strong) GameboardView * _Nullable board;
@property (nonatomic, strong) GameModel * _Nullable model;
@property (nonatomic, readonly) CGFloat boardWidth;
@property (nonatomic, readonly) CGFloat thinPadding;
@property (nonatomic, readonly) CGFloat thickPadding;
@property (nonatomic, readonly) CGFloat viewPadding;
@property (nonatomic, readonly) CGFloat verticalViewOffset;
- (nonnull instancetype)initWithDimension:(NSInteger)d threshold:(NSInteger)t OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setupSwipeControls;
- (void)viewDidLoad;
- (void)reset;
- (void)setupGame;
- (void)followUp;
- (void)up:(UIGestureRecognizer * _Null_unspecified)r;
- (void)down:(UIGestureRecognizer * _Null_unspecified)r;
- (void)left:(UIGestureRecognizer * _Null_unspecified)r;
- (void)right:(UIGestureRecognizer * _Null_unspecified)r;
- (void)scoreChangedTo:(NSInteger)score;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class UILabel;
@class UIFont;

/**
  A simple view that displays the player’s score.
*/
SWIFT_CLASS("_TtC10swift_20489ScoreView")
@interface ScoreView : UIView
@property (nonatomic) NSInteger score;
@property (nonatomic, readonly) CGRect defaultFrame;
@property (nonatomic, strong) UILabel * _Nonnull label;
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)bgcolor textColor:(UIColor * _Nonnull)tcolor font:(UIFont * _Nonnull)font radius:(CGFloat)r OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)scoreChangedTo:(NSInteger)s;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/**
  A view representing a single swift-2048 tile.
*/
SWIFT_CLASS("_TtC10swift_20488TileView")
@interface TileView : UIView
@property (nonatomic) NSInteger value;
@property (nonatomic, readonly, strong) UILabel * _Nonnull numberLabel;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIButton;

SWIFT_CLASS("_TtC10swift_204814ViewController")
@interface ViewController : UIViewController
- (void)viewDidLoad;
- (IBAction)startGameButtonTapped:(UIButton * _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
